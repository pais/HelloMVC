//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("forumModel", "FK_MessagesTopics", "MessagesSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Forum.Models.MessagesSet), "TopicsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Forum.Models.TopicsSet), true)]
[assembly: EdmRelationshipAttribute("forumModel", "FK_UserMessages", "UserSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Forum.Models.UserSet), "MessagesSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Forum.Models.MessagesSet), true)]
[assembly: EdmRelationshipAttribute("forumModel", "FK_UserTopics", "UserSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Forum.Models.UserSet), "TopicsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Forum.Models.TopicsSet), true)]

#endregion

namespace Forum.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class forumEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new forumEntities object using the connection string found in the 'forumEntities' section of the application configuration file.
        /// </summary>
        public forumEntities() : base("name=forumEntities", "forumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new forumEntities object.
        /// </summary>
        public forumEntities(string connectionString) : base(connectionString, "forumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new forumEntities object.
        /// </summary>
        public forumEntities(EntityConnection connection) : base(connection, "forumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessagesSet> MessagesSet
        {
            get
            {
                if ((_MessagesSet == null))
                {
                    _MessagesSet = base.CreateObjectSet<MessagesSet>("MessagesSet");
                }
                return _MessagesSet;
            }
        }
        private ObjectSet<MessagesSet> _MessagesSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopicsSet> TopicsSet
        {
            get
            {
                if ((_TopicsSet == null))
                {
                    _TopicsSet = base.CreateObjectSet<TopicsSet>("TopicsSet");
                }
                return _TopicsSet;
            }
        }
        private ObjectSet<TopicsSet> _TopicsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSet> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<UserSet>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<UserSet> _UserSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessagesSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessagesSet(MessagesSet messagesSet)
        {
            base.AddObject("MessagesSet", messagesSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopicsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopicsSet(TopicsSet topicsSet)
        {
            base.AddObject("TopicsSet", topicsSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(UserSet userSet)
        {
            base.AddObject("UserSet", userSet);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="forumModel", Name="MessagesSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessagesSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessagesSet object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="messageDate">Initial value of the MessageDate property.</param>
        /// <param name="isChanged">Initial value of the IsChanged property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="user_UserId">Initial value of the User_UserId property.</param>
        public static MessagesSet CreateMessagesSet(global::System.Int32 messageId, global::System.Int32 userId, global::System.Int32 topicId, global::System.String message, global::System.DateTime messageDate, global::System.Byte isChanged, global::System.Byte isActive, global::System.Int32 user_UserId)
        {
            MessagesSet messagesSet = new MessagesSet();
            messagesSet.MessageId = messageId;
            messagesSet.UserId = userId;
            messagesSet.TopicId = topicId;
            messagesSet.Message = message;
            messagesSet.MessageDate = messageDate;
            messagesSet.IsChanged = isChanged;
            messagesSet.IsActive = isActive;
            messagesSet.User_UserId = user_UserId;
            return messagesSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                OnTopicIdChanging(value);
                ReportPropertyChanging("TopicId");
                _TopicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicId");
                OnTopicIdChanged();
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private global::System.DateTime _MessageDate;
        partial void OnMessageDateChanging(global::System.DateTime value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsChanged
        {
            get
            {
                return _IsChanged;
            }
            set
            {
                OnIsChangedChanging(value);
                ReportPropertyChanging("IsChanged");
                _IsChanged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChanged");
                OnIsChangedChanged();
            }
        }
        private global::System.Byte _IsChanged;
        partial void OnIsChangedChanging(global::System.Byte value);
        partial void OnIsChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Byte _IsActive;
        partial void OnIsActiveChanging(global::System.Byte value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_UserId
        {
            get
            {
                return _User_UserId;
            }
            set
            {
                OnUser_UserIdChanging(value);
                ReportPropertyChanging("User_UserId");
                _User_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_UserId");
                OnUser_UserIdChanged();
            }
        }
        private global::System.Int32 _User_UserId;
        partial void OnUser_UserIdChanging(global::System.Int32 value);
        partial void OnUser_UserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_MessagesTopics", "TopicsSet")]
        public EntityCollection<TopicsSet> TopicsSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopicsSet>("forumModel.FK_MessagesTopics", "TopicsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopicsSet>("forumModel.FK_MessagesTopics", "TopicsSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_UserMessages", "UserSet")]
        public UserSet UserSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserMessages", "UserSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserMessages", "UserSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserSet> UserSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserMessages", "UserSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserSet>("forumModel.FK_UserMessages", "UserSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="forumModel", Name="TopicsSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopicsSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopicsSet object.
        /// </summary>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="topicText">Initial value of the TopicText property.</param>
        /// <param name="topicDate">Initial value of the TopicDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="user_UserId">Initial value of the User_UserId property.</param>
        /// <param name="messages_MessageId">Initial value of the Messages_MessageId property.</param>
        public static TopicsSet CreateTopicsSet(global::System.Int32 topicId, global::System.Int32 userId, global::System.String topicText, global::System.DateTime topicDate, global::System.Byte isActive, global::System.Int32 user_UserId, global::System.Int32 messages_MessageId)
        {
            TopicsSet topicsSet = new TopicsSet();
            topicsSet.TopicId = topicId;
            topicsSet.UserId = userId;
            topicsSet.TopicText = topicText;
            topicsSet.TopicDate = topicDate;
            topicsSet.IsActive = isActive;
            topicsSet.User_UserId = user_UserId;
            topicsSet.Messages_MessageId = messages_MessageId;
            return topicsSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                if (_TopicId != value)
                {
                    OnTopicIdChanging(value);
                    ReportPropertyChanging("TopicId");
                    _TopicId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicId");
                    OnTopicIdChanged();
                }
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TopicText
        {
            get
            {
                return _TopicText;
            }
            set
            {
                OnTopicTextChanging(value);
                ReportPropertyChanging("TopicText");
                _TopicText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TopicText");
                OnTopicTextChanged();
            }
        }
        private global::System.String _TopicText;
        partial void OnTopicTextChanging(global::System.String value);
        partial void OnTopicTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TopicDate
        {
            get
            {
                return _TopicDate;
            }
            set
            {
                OnTopicDateChanging(value);
                ReportPropertyChanging("TopicDate");
                _TopicDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicDate");
                OnTopicDateChanged();
            }
        }
        private global::System.DateTime _TopicDate;
        partial void OnTopicDateChanging(global::System.DateTime value);
        partial void OnTopicDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Byte _IsActive;
        partial void OnIsActiveChanging(global::System.Byte value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_UserId
        {
            get
            {
                return _User_UserId;
            }
            set
            {
                OnUser_UserIdChanging(value);
                ReportPropertyChanging("User_UserId");
                _User_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_UserId");
                OnUser_UserIdChanged();
            }
        }
        private global::System.Int32 _User_UserId;
        partial void OnUser_UserIdChanging(global::System.Int32 value);
        partial void OnUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Messages_MessageId
        {
            get
            {
                return _Messages_MessageId;
            }
            set
            {
                OnMessages_MessageIdChanging(value);
                ReportPropertyChanging("Messages_MessageId");
                _Messages_MessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Messages_MessageId");
                OnMessages_MessageIdChanged();
            }
        }
        private global::System.Int32 _Messages_MessageId;
        partial void OnMessages_MessageIdChanging(global::System.Int32 value);
        partial void OnMessages_MessageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_MessagesTopics", "MessagesSet")]
        public MessagesSet MessagesSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesSet>("forumModel.FK_MessagesTopics", "MessagesSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesSet>("forumModel.FK_MessagesTopics", "MessagesSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessagesSet> MessagesSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesSet>("forumModel.FK_MessagesTopics", "MessagesSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessagesSet>("forumModel.FK_MessagesTopics", "MessagesSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_UserTopics", "UserSet")]
        public UserSet UserSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserTopics", "UserSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserTopics", "UserSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserSet> UserSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("forumModel.FK_UserTopics", "UserSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserSet>("forumModel.FK_UserTopics", "UserSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="forumModel", Name="UserSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSet object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userType">Initial value of the UserType property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        public static UserSet CreateUserSet(global::System.Int32 userId, global::System.Int16 userType, global::System.String userName, global::System.String password, global::System.String email, global::System.Byte isApproved, global::System.Byte isActive, global::System.DateTime registrationDate)
        {
            UserSet userSet = new UserSet();
            userSet.UserId = userId;
            userSet.UserType = userType;
            userSet.UserName = userName;
            userSet.Password = password;
            userSet.Email = email;
            userSet.IsApproved = isApproved;
            userSet.IsActive = isActive;
            userSet.RegistrationDate = registrationDate;
            return userSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.Int16 _UserType;
        partial void OnUserTypeChanging(global::System.Int16 value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Byte _IsApproved;
        partial void OnIsApprovedChanging(global::System.Byte value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Byte _IsActive;
        partial void OnIsActiveChanging(global::System.Byte value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_UserMessages", "MessagesSet")]
        public EntityCollection<MessagesSet> MessagesSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessagesSet>("forumModel.FK_UserMessages", "MessagesSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessagesSet>("forumModel.FK_UserMessages", "MessagesSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("forumModel", "FK_UserTopics", "TopicsSet")]
        public EntityCollection<TopicsSet> TopicsSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopicsSet>("forumModel.FK_UserTopics", "TopicsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopicsSet>("forumModel.FK_UserTopics", "TopicsSet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
